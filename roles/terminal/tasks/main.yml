---

# nvim 0.4.4
# build-essential: amongst others: make
- name: Build additional software list
  ansible.builtin.set_fact:
    tools:
      - tmux
      - rsync
      - zsh
      - zsh-syntax-highlighting
      - zsh-autosuggestions
      - fzf
      - vim
      # - neovim
      - lua5.4
      - luarocks
      - htop
      - build-essential
      - curl
      - wget
      - gnupg
      - pwgen
      - gawk
      - tree
      - exa
      - neofetch
      - fd-find
      - bc
      - ripgrep
      - apt-file
      - python3-pip
      - python-is-python3

- name: Ensure additional software is installed
  ansible.builtin.apt:
    name: "{{ tools|default([]) }}"
    state: present
    update_cache: true

- name: Ensure the required directories exist
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    recurse: true
  with_items:
    - "~/.config/zsh"
    - "~/.config/tmux"
    - "~/builds"
    - "~/.cache/zsh"
    - "~/.local/bin"
    - "~/.local/go/bin"
    - "~/go/bin"
    - "~/.cargo/bin"
    - "~/bin"
  become: false

- name: Ensure necessary files are present
  ansible.builtin.copy:
    dest: "{{ item }}"
    mode: "0644"
    content: ''
  with_items:
    - "~/.cache/zsh/dummy-zcompdump-path-marker"
  become: false

- name: Ensure personal repos are present in .config
  ansible.posix.synchronize:
    src: "{{ item }}"
    dest: "~/.config"
    mode: push
    rsync_opts:
      - "--exclude=.git"
  with_items:
    - "{{ terminal_dot_config_repos }}"
  become: false

- name: Ensure zsh .env in home folder
  ansible.builtin.copy:
    src: .zshenv
    dest: "~/.zshenv"
    mode: "0644"
  become: false

- name: Ensure repos are cloned to builds directory
  ansible.builtin.git:
    clone: true
    dest: "~/builds"
    repo: "{{ item }}"
    version: master
    update: false
    force: false
  with_items:
    - "{{ terminal_build_repos }}"
  become: false

- name: Ensure opt repos are cloned ( spaceship at least )
  ansible.builtin.git:
    clone: true
    dest: "/opt/spaceship-prompt"
    repo: "{{ item }}"
    version: master
    update: false
    force: false
    depth: 1
  with_items:
    - "{{ terminal_opt_repos }}"

- name: Ensure zsh spaceship prompt is linked to zsh
  ansible.builtin.file:
    src: "/opt/spaceship-prompt/spaceship.zsh"
    dest: "/usr/local/share/zsh/site-functions/prompt_spaceship_setup"
    state: link

- name: Ensure users shell is zsh
  ansible.builtin.user:
    name: "{{ vps_user }}"
    shell: /usr/bin/zsh

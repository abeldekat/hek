---

- name: Ensure configs are created
  delegate_to: localhost
  become: false
  block:
    # New users will be added to the end of the file
    - name: WireGuard user list updated
      ansible.builtin.lineinfile:
        dest: "{{ wireguard_pki_path }}/index.txt"
        create: true
        mode: "0600"
        insertafter: EOF
        line: "{{ item }}"
      register: lineinfile
      with_items: "{{ wireguard_users }}"

    - name: Set wireguard users as fact
      ansible.builtin.set_fact:
        wireguard_users_indexed: "{{ (lookup('file', wireguard_pki_path + 'index.txt')).split('\n') }}"

    - name: WireGuard users config generated
      ansible.builtin.template:
        src: client.conf.j2
        dest: "{{ wireguard_config_path }}/{{ item.1 }}.conf"
        mode: "0600"
      with_indexed_items: "{{ wireguard_users_indexed }}"
      when: item.1 in wireguard_users
      vars:
        index: "{{ item.0 }}"

    # disable ansible lint var spacing because of || true in script
    - name: Generate QR codes  # noqa var-spacing
      ansible.builtin.shell: >
        umask 077;
        which segno &&
        segno --scale=5 --output={{ item.1 }}.png \
          "{{ lookup('template', 'client.conf.j2') }}" || true
      changed_when: false
      with_indexed_items: "{{ wireguard_users_indexed }}"
      when: item.1 in wireguard_users
      vars:
        index: "{{ item.0 }}"
        ansible_python_interpreter: "{{ ansible_playbook_python }}"
      args:
        chdir: "{{ wireguard_config_path }}"
        executable: bash
      tags: [skip-ansible-lint]


- name: WireGuard configured
  ansible.builtin.template:
    src: server.conf.j2
    dest: "/etc/wireguard/{{ wireguard_interface }}.conf"
    mode: "0600"
  notify: restart wireguard

---

- name: Add peers, retrieve keys
  ansible.builtin.shell: vps_wg_peer_keys
  register: wg_peerskeys
  changed_when: wg_peerskeys.changed
  args:
    executable: bash
  loop: "{{ wg_peers_to_add }}"

- name: Fact, for each new peer, add information to internal dictionary
  ansible.builtin.set_fact:
    wg_peers: "{{ wg_peers | default({}) | combine(\
                 { name: \
                 {'name': name, 'ip': ip, 'ipv6': ipv6, \
                 'key': key, 'pskkey': pskkey, 'pubkey': pubkey, 'pkalive': pkalive }}) }}"
  loop: "{{ wg_peerskeys['results'] }}"
  loop_control:
    index_var: peer_index
  vars:
    name: "{{ item.item }}"
    ip: "{{ wireguard_network_ipv4 | ansible.utils.ipmath(peer_index | int + wireguard_peers_ip_index_start | int) }}"
    ipv6: "{{ wireguard_network_ipv6 | ansible.utils.ipmath(peer_index | int + wireguard_peers_ip_index_start | int) if vps_ipv6_support else '' }}"
    key: "{{ item.stdout_lines[0] }}"
    pskkey: "{{ item.stdout_lines[1] }}"
    pubkey: "{{ item.stdout_lines[2] }}"
    pkalive: "{{ wireguard_persistentkeepalive | string if wireguard_persistentkeepalive > 0 else '' }}"
  no_log: "{{ wireguard_no_log }}"

- name: Create new peers file
  ansible.builtin.template:
    src: host_peers.yml.j2
    dest: "{{ wg_part_new }}"
    mode: "0600"

---
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/blockinfile_module.html
# Approach:
# Part 1 file:
#   - Generate new server config part or copy old server config
#   - Delete stale existing clients from the server copy
# Part 2 file: Add new peers
# Concatenate both files into a wireguard config

- name: Ensure wireguard installed
  ansible.builtin.apt:
    name: wireguard
    state: present
    update_cache: true

- name: Ensure directories are present
  ansible.builtin.include_tasks: directories.yml
- name: Ensure shell scripts are present
  ansible.builtin.include_tasks: scripts.yml
- name: Ensure reduce mtu is calculated
  ansible.builtin.include_tasks: reduce_mtu.yml

- name: Statistics wireguard host config
  ansible.builtin.stat:
    path: "{{ '/etc/wireguard/' + wireguard_interface + '.conf' }}"
  register: wireguard_host_result

- name: Global variables
  ansible.builtin.set_fact:
    wg_part_host: "{{ wireguard_parts_path }}/1_host_{{ wireguard_interface }}.conf"
    wg_part_new_peers: "{{ wireguard_parts_path }}/2_new_{{ wireguard_interface }}.conf"
    # Make sure the configured wireguard_users are unique
    wg_peernames_given: "{{ wireguard_users | default([]) | unique }}"
    # No wg config on server. Wireguard host must be created
    wg_is_new_host: "{{ not wireguard_host_result.stat.exists }}"

- name: Global variables to be overridden
  ansible.builtin.set_fact:
    # A list of names with peers to add
    wg_peernames_to_add: []
    # A list of names with peers to delete
    wg_peernames_to_delete: []
    # A dictionary with info needed for a new client config file
    wg_host: {}
    # The next available ip index for new peers
    wg_host_peers_ip_index_start: "{{ wireguard_peers_ip_index_start }}"


- name: Block wireguard host interface part
  block:
    - name: Include new host tasks
      ansible.builtin.include_tasks: host_new.yml
      when: wg_is_new_host
    - name: Include existing host tasks
      ansible.builtin.include_tasks: host_existing.yml
      when: not wg_is_new_host
    - name: Print global vars
      ansible.builtin.debug:
        msg: |
          wg_peernames_given: {{ wg_peernames_given }}
          wg_peernames_to_add: "{{ wg_peernames_to_add }}"
          wg_peernames_to_delete: "{{ wg_peernames_to_delete }}"
          wg_host: "{{ wg_host }}"
          wg_host_peers_ip_index_start: "{{ wg_host_peers_ip_index_start }}"

- name: Block wireguard peers part
  block:
    - name: Delete peers
      ansible.builtin.include_tasks: peers_delete.yml
      when:
        - wg_peernames_to_delete | length > 0
    - name: Add peers
      ansible.builtin.include_tasks: peers_add.yml
      when:
        - wg_peernames_to_add | length > 0

# Files are assembled in string sorting order, overwrites destination
- name: Block assemble
  block:
    - name: Assemble parts into a host config
      ansible.builtin.assemble:
        src: "{{ wireguard_parts_path }}"
        dest: "{{ wireguard_host_conf }}"
        mode: "0600"
      notify:
        - Remove parts
        - Restart wireguard
    - name: Store new shasum
      ansible.builtin.include_tasks: shasum_new.yml
  when: wg_peernames_to_delete | union(wg_peernames_to_add) | length > 0

- name: Ensure handlers run now
  ansible.builtin.meta: flush_handlers

- name: Ensure WireGuard enabled and started
  ansible.builtin.systemd:
    name: "{{ wireguard_service_name }}"
    state: started
    enabled: true

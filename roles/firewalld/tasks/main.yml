---
# See tutorials: https://www.procustodibus.com/
# useful commands:
# ip -brief address show
# nmcli connecton show
# Using nmcli on laptop to bind a connection to a firewald zone:
# sudo nmcli connection modify "<mywireless>" connection.zone home

- name: Ensure firewalld installed
  ansible.builtin.apt:
    name: firewalld
    state: present
    update_cache: true

- name: Ensure firewalld systemd service runs
  ansible.builtin.systemd:
    name: firewalld
    daemon_reload: true
    enabled: true
    state: started

- name: Ensure public ipv4 interface is added to public zone
  ansible.posix.firewalld:
    zone: public
    permanent: true
    interface: "{{ ansible_default_ipv4['interface'] }}"
    state: enabled
  notify: reload firewalld

- name: Ensure public ipv6 interface is added to public zone
  ansible.posix.firewalld:
    zone: public
    permanent: true
    interface: "{{ ansible_default_ipv6['interface'] }}"
    state: enabled
  when: vps_ipv6_support
  notify: reload firewalld

- name: Ensure custom admin zone is present
  ansible.posix.firewalld:
    zone: admin
    permanent: true
    state: present
  notify: reload firewalld

- name: Ensure custom wireguard zone mywg is present
  ansible.posix.firewalld:
    zone: mywg
    permanent: true
    state: present
  when: firewalld_wireguard_enabled
  notify: reload firewalld

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  ansible.builtin.meta: flush_handlers

# - name: Ensure custom admin zone is restricted to ansible controller ip
#   ansible.posix.firewalld:
#     zone: admin
#     permanent: true
#     state: enabled
#     source: "{{ vps_home_ipv4 }}"
#   notify: reload firewalld

- name: Ensure custom admin zone allows ssh
  ansible.posix.firewalld:
    zone: admin
    permanent: true
    state: enabled
    service: ssh
  notify: reload firewalld

# - name: Ensure public zone does not allow ssh
#   ansible.posix.firewalld:
#     zone: public
#     permanent: true
#     service: ssh
#     state: disabled
#   notify: reload firewalld

# - name: Ensure custom wireguard zone allows services
#   ansible.posix.firewalld:
#     zone: mywg
#     permanent: true
#     service: "{{ item }}"
#     state: enabled
#   with_items:
#     - ssh
#     - dhcpv6-client
#   notify: reload firewalld
#   when: firewalld_webserver_enabled

# - name: Ensure wireguard interface is added to custom wireguard zone
#   ansible.posix.firewalld:
#     zone: mywg
#     permanent: true
#     interface: "{{ wireguard_interface }}"
#     state: enabled
#   notify: reload firewalld
#   when: firewalld_wireguard_enabled

# - name: Ensure public zone allows wireguard port
#   ansible.posix.firewalld:
#     zone: public
#     permanent: true
#     port: "{{ wireguard_port }}/udp"
#     state: enabled
#   notify: reload firewalld
#   when: firewalld_wireguard_enabled

- name: Ensure public zone allows http and https
  ansible.posix.firewalld:
    zone: public
    permanent: true
    service: "{{ item }}"
    state: enabled
  with_items:
    - http
    - https
  notify: reload firewalld
  when: firewalld_webserver_enabled

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  ansible.builtin.meta: flush_handlers

---
# @see main_facts.yml

- name: attach sources and interfaces to zones
  ansible.builtin.import_tasks: attach_to_zones.yml

# To get the difference of 2 lists (items in 1 that donâ€™t exist in 2):
- name: ssh accept on all zones but fw_zone_public
  ansible.builtin.include_tasks: service_ssh_accept.yml
  loop: "{{ fw_zones_active | difference([fw_zone_public]) }}"

# To get the intersection of 2 lists (unique list of all items in both):
- name: ssh drop on fw_zone_public only
  ansible.builtin.include_tasks: service_ssh_drop.yml
  loop: "{{ fw_zones_active | intersect([fw_zone_public]) }}"

- name: http and https on all zones
  ansible.builtin.include_tasks: service_web.yml
  loop: "{{ fw_zones_active }}"
  loop_control:
    loop_var: zone
  when: firewalld_webserver_enabled

- name: vpn specific config, anticipate possibilty of multiple vpn zones in the future
  block:
    - name: access to vpn
      ansible.builtin.include_tasks: service_wireguard.yml
      loop: "{{ fw_zones_active | intersect(fw_zones_other) }}"

    - name: access to vpn from other ports, redirected to wireguard port
      ansible.builtin.include_tasks: service_wireguard_by_redirection.yml
      loop: "{{ fw_zones_active | intersect(fw_zone_public) }}"
      loop_control:
        loop_var: zone
      when: firewalld_vpn_ports_to_redirect

    - name: dns accept on vpn
      ansible.builtin.include_tasks: service_dns.yml
      loop: "{{ fw_zones_active | intersect(fw_zones_vpn) }}"
      when: firewalld_dnscrypt_proxy_enabled

    - name: samba accept on vpn, not recommended, untested
      ansible.builtin.include_tasks: service_samba.yml
      loop: "{{ fw_zones_active | intersect(fw_zones_vpn) }}"
      when: firewalld_samba_enabled

    - name: vpn forwarding and masquerading to outside world
      ansible.builtin.include_tasks: attach_vpn_to_world.yml
      loop: "{{ fw_zones_active | intersect(fw_zones_vpn) }}"
  when: firewalld_vpn_enabled

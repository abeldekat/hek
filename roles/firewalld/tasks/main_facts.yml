---

#######################################################################
# When looping over zones in other tasks, the purpose is to write for example
# loop: "{{ fw_zones_active | intersect([fw_zone_public]) }}"
# This can be translated into
# "Use zone fw_zone_public if its present in fw_zones_active"
# "Otherwise, do nothing, because the loop will have an empty list"
#
# Currently, there is only one vpn zone: fw_zone_vpn
# All zones in use must be declared here:
- name: Facts, vpn versus other zones
  ansible.builtin.set_fact:
    fw_zones_vpn: ["{{ fw_zone_vpn }}"]
    fw_zones_other: ["{{ fw_zone_admin }}", "{{ fw_zone_public }}"]

#######################################################################
# Now, start adding active zones taking options into account:
- name: Facts, all active zones, non vpn
  ansible.builtin.set_fact:
    fw_zones_active: "{{ fw_zones_other }}"

- name: Facts, all active zones, add vpn conditionally
  ansible.builtin.set_fact:
    fw_zones_active: "{{ fw_zones_active | union([fw_zone_vpn]) }}"
  when: firewalld_vpn_enabled

#######################################################################
# Build list of ipsets taking options into account
- name: Facts, active ipsets
  ansible.builtin.set_fact:
    fw_ipsets_active: ["{{ fw_ipset_admin }}"]

- name: Facts, active ipsets, add ipv6 conditionally
  ansible.builtin.set_fact:
    fw_ipsets_active: "{{ fw_ipsets_active | union([fw_ipset_admin_ipsix]) }}"
  when: vps_ipv6_support

# vpn toggle should be true and vpn zone must be in active zones
- name: Facts, vpn ipsets
  block:
    - name: Facts, active ipsets, add vpn ipv4 conditionally
      ansible.builtin.set_fact:
        fw_ipsets_active: "{{ fw_ipsets_active | union([fw_ipset_vpn]) }}"

    - name: Facts, active ipsets, add vpn ipv6 conditionally
      ansible.builtin.set_fact:
        fw_ipsets_active: "{{ fw_ipsets_active | union([fw_ipset_vpn_ipsix]) }}"
      when: vps_ipv6_support
  when:
    - firewalld_vpn_enabled
    - fw_zones_active | intersect([fw_zone_vpn])

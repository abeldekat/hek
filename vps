#!/usr/bin/env bash

set -e

# if [ -z ${VIRTUAL_ENV+x} ]
# then
#   ACTIVATE_SCRIPT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.env/bin/activate"
#   if [ -f "$ACTIVATE_SCRIPT" ]
#   then
#     # shellcheck source=/dev/null
#     source "$ACTIVATE_SCRIPT"
#   else
#     echo "$ACTIVATE_SCRIPT not found.  Did you follow documentation to install dependencies?"
#     exit 1
#   fi
# fi

_provision(){
  ansible-playbook -e "ansible_ssh_user=root" provision.yml;
}

_main(){
  ansible-playbook -K main.yml;
}

_all(){
  _provision;
  _main;
}

# Start generating new wireguard configs
_wireguard_rotate(){
  ansible-playbook -K wireguard_rotate.yml
}

# Add and delete users given an existing wireguard config 
_wireguard_users_add_and_delete(){
  ansible-playbook -K wireguard_users_add_and_delete.yml
}

_searxng_update(){
  ansible-playbook -K main.yml --tags="searxng";
}

_with_tags(){
  if [[ (-z "$1") ]]; then
		echo "Usage: <tags>"
		exit 1
	fi
  local tags="$1"
  ansible-playbook -K main.yml --tags="$tags";
}

action=$1
shift
case "$action" in
  "all") _all ;;
  "main") _main ;;
  "provision") _provision ;;
  "wireguard_users_add_and_delete") _wireguard_users_add_and_delete ;;
  "wireguard_rotate") _wireguard_rotate ;;
  "searxng_update") _searxng_update ;;
  "with_tags") _with_tags "$1" ;;
  "help") tail -n 12 "$0" ;;
  *) echo -e "Unknown subcommand. " && exit 1 ;;
esac

---
# 1. Tags: -> Selecting which tasks are considered to run:
# Invoke without tags: Everything runs
# Using tag inheritance with import_role: All tags in the role will be tagged with the tag
# assigned to the import_role task
# 2 When: -> Decides if tasks actually runs
# Using when on import_role task: All tasks in the role will be executed and skipped
# Also relevant:
# https://yaml-multiline.info/
#
# fatal: [localhost]: FAILED! => {"msg": "The ipaddr filter requires python's netaddr be installed on the ansible controller"}
# --> pip install netaddr

# just a note:
# ansible [core 2.12.5]
#   config file = /home/user/git/github/algo/ansible.cfg
#   configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
#   ansible python module location = /usr/lib/python3.10/site-packages/ansible
#   ansible collection location = /home/user/.ansible/collections:/usr/share/ansible/collections
#   executable location = /usr/bin/ansible
#   python version = 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]
#   jinja version = 3.0.3
#   libyaml = True

# TODO:
# Evaluate:
#   Test firewall with port_avoid
#   wireguard_port_avoid redirects to port_actual
#   between_clients?
#   hash_limit
# wireguard prefer ipv6? Needs brackets in endpoint client.conf
# Test python env
# searxng: Override disabled engines, like searxng_engines_restrict
# ssh: unknown terminal alacritty
# Think of a name for the repo
# Readme and repo on github

- name: Configure the server and install required software
  hosts: vps_servers
  gather_facts: true
  become: true
  tasks:

    - name: Import facts role
      ansible.builtin.import_role:
        name: facts
      tags: [always]

    - name: Import base role
      ansible.builtin.import_role:
        name: base
      tags: [base]

    - name: Import nftables role
      ansible.builtin.import_role:
        name: nftables
      when: nftables_enabled
      tags: [nftables]

    - name: Import firewalld role
      ansible.builtin.import_role:
        name: firewalld
      when: firewalld_enabled
      tags: [firewalld]

    - name: Import dns role
      ansible.builtin.import_role:
        name: dns
      when: dns_enabled
      tags: [dns]

    - name: Test if wireguard is already configured
      ansible.builtin.stat:
        path: "{{ '/etc/wireguard/' + wireguard_interface + '.conf' }}"
      register: _wireguard_exists
      when: wireguard_enabled
      tags: [wireguard]

    - name: Ensure wireguard initial setup
      block:
        - name: Ensure no local wireguard config present on new wg creation
          ansible.builtin.file:
            dest: "{{ wireguard_config_path }}"
            state: absent
          delegate_to: localhost
          become: false

        - name: Import wireguard role
          ansible.builtin.import_role:
            name: wireguard
      when:
        - wireguard_enabled
        - not _wireguard_exists.stat.exists
      tags: [wireguard]

    - name: Import terminal software role
      ansible.builtin.import_role:
        name: terminal_software
      when: terminal_software_enabled
      tags: [terminal_software]

    - name: Import docker role
      ansible.builtin.import_role:
        name: docker
      when: docker_enabled
      tags: [docker]

    - name: Import caddy role
      ansible.builtin.import_role:
        name: caddy
      when: caddy_enabled
      tags: [caddy]

    - name: Import searxng role
      ansible.builtin.import_role:
        name: searxng
      when: searxng_enabled
      become: "{{ not searxng_rootless }}"
      tags: [searxng]

---
# override ansible_ssh_user in invoking shellscript
- hosts: vps_servers
  gather_facts: true

  # ansible webserver -m ping
  # ansible webserver -m shell -a id
  # protect ssh
  # add drb user as sudo
  tasks:

    - name: Ensure remote tmp exists, prevents ansible warning
      ansible.builtin.file:
        path: /root/.ansible/tmp
        state: directory
        mode: 0755
        owner: root
        group: root

    - name: Add a new user
      ansible.builtin.user:
        name: "{{ vps_user }}"
        password: "{{ vps_sha_password }}"
        append: true
        groups: sudo
        update_password: on_create
        shell: /bin/bash

    - name: add SSH Key to authorized
      ansible.posix.authorized_key:
        user: "{{ vps_user }}"
        key: "{{ lookup('file', lookup('env','HOME') + item) }}"
        state: present
      with_items:
        - "{{ vps_provision_ssh_keys }}"

    # For state=present, the pattern to replace if found. Only the last line found will be replaced.
    # If the regular expression is not matched, the line will be added to the file in keeping with insertbefore or insertafter settings.
    - name: Ensure no password Authentication
      ansible.builtin.lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: "PasswordAuthentication no"
        state: present
        backup: true
      notify:
        - restart ssh

    - name: Ensure no root Login
      ansible.builtin.lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: "PermitRootLogin no"
        state: present
        backup: true
      notify:
        - restart ssh

    - name: Ensure no SSH ChallengeResponseAuthentication
      ansible.builtin.lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^ChallengeResponseAuthentication'
        line: "ChallengeResponseAuthentication no"
        state: present
        backup: true
      notify:
        - restart ssh

  handlers:
    - name: restart ssh
      ansible.builtin.service:
        name: sshd
        state: restarted
